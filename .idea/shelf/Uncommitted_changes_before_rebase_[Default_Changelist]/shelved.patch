Index: app/src/main/java/com/example/s333957s331153mappe3/HusJSON.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.s333957s331153mappe3;\nimport android.os.AsyncTask;\nimport org.json.JSONArray;\nimport org.json.JSONException;\nimport org.json.JSONObject;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class HusJSON extends AsyncTask<String, Void,String> {\n    List<Hus> alleHus = new ArrayList<>();\n\n    @Override\n    protected String doInBackground(String... urls) {\n        String retur = \"\";\n        String s = \"\";\n        String output = \"\";\n        for (String url : urls) {\n\n            try {\n                URL urlen = new URL(urls[0]);\n                HttpURLConnection conn = (HttpURLConnection)\n                        urlen.openConnection();\n                conn.setRequestMethod(\"POST\");\n                conn.setRequestProperty(\"Accept\", \"application/json\");\n\n                if (conn.getResponseCode() != 200) {\n                    throw new RuntimeException(\"Failed : HTTP error code : \" + conn.getResponseCode());\n                }\n                BufferedReader br = new BufferedReader(new InputStreamReader((conn.getInputStream())));\n                System.out.println(\"Output from Server .... \\n\");\n                while ((s = br.readLine()) != null) {\n                    output = output + s;\n                }\n                conn.disconnect();\n\n                try {\n                    JSONArray mat = new JSONArray(output);\n                    for (int i = 0; i < mat.length(); i++) {\n                        JSONObject jsonobject = mat.getJSONObject(i);\n                        int husID = jsonobject.getInt(\"HusID\");\n                        String navn = jsonobject.getString(\"Navn\");\n                        String beskrivelse = jsonobject.getString(\"Beskrivelse\");\n                        String gateadresse = jsonobject.getString(\"Gateadresse\");\n                        Double latitude = jsonobject.getDouble(\"Latitude\");\n                        Double longitude = jsonobject.getDouble(\"Longitude\");\n                        int etasjer = jsonobject.getInt(\"Etasjer\");\n                        Hus etHus = new Hus(navn, beskrivelse, gateadresse, latitude, longitude, etasjer);\n                        alleHus.add(etHus);\n                    }\n                    return retur;\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n                return retur;\n            } catch (Exception e) {\n                return \"Noe gikk feil\";\n            }\n        }\n        return retur;\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/s333957s331153mappe3/HusJSON.java	(revision 02112e0c246ac4a86d49ac151b7dac04a28db9cd)
+++ app/src/main/java/com/example/s333957s331153mappe3/HusJSON.java	(date 1605184390000)
@@ -48,7 +48,7 @@
                         Double latitude = jsonobject.getDouble("Latitude");
                         Double longitude = jsonobject.getDouble("Longitude");
                         int etasjer = jsonobject.getInt("Etasjer");
-                        Hus etHus = new Hus(navn, beskrivelse, gateadresse, latitude, longitude, etasjer);
+                        Hus etHus = new Hus(husID, navn, beskrivelse, gateadresse, latitude, longitude, etasjer);
                         alleHus.add(etHus);
                     }
                     return retur;
Index: app/src/main/java/com/example/s333957s331153mappe3/HusOversikt.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.s333957s331153mappe3;\nimport android.app.Dialog;\nimport android.content.Intent;\nimport android.graphics.Color;\nimport android.os.AsyncTask;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.AdapterView;\nimport android.widget.ArrayAdapter;\nimport android.widget.Button;\nimport android.widget.ListView;\nimport android.widget.Spinner;\nimport android.widget.TextView;\nimport android.widget.Toolbar;\nimport androidx.appcompat.app.AppCompatActivity;\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\nimport org.json.JSONArray;\nimport org.json.JSONException;\nimport org.json.JSONObject;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class HusOversikt extends AppCompatActivity {\n    ListView lv;\n    Toolbar tb;\n    Spinner etasjer;\n    TextView husInfo;\n    FloatingActionButton fab;\n    List<Rom> alleRom;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_husoversikt);\n        lv = findViewById(R.id.lv);\n        husInfo = findViewById(R.id.husInfo);\n        etasjer = findViewById(R.id.etasjer);\n        tb = findViewById(R.id.toolbarHusOversikt);\n        tb.setLogo(R.mipmap.ic_launcher_round);\n        tb.inflateMenu(R.menu.manu_rom);\n        setActionBar(tb);\n        tb.setTitle(\"Hus\");\n\n        HusAsyncTask task = new HusAsyncTask();\n        task.execute(\"http://student.cs.hioa.no/~s331153/husjsonout.php\");\n\n        Integer[] items = new Integer[]{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20};\n        ArrayAdapter<Integer> adapter = new ArrayAdapter<Integer>(this,android.R.layout.simple_spinner_item, items){\n            @Override\n            public View getView(int position, View convertView, ViewGroup parent) {\n                View view = super.getView(position, convertView, parent);\n                TextView textView = view.findViewById(android.R.id.text1);\n                textView.setTextColor(Color.BLACK);\n                return view;\n            }\n        };\n        //etasjer.setAdapter(adapter);\n\n        String[] rom = new String[]{\"Rom 1\", \"Rom 2\", \"Rom 3\", \"Rom 4\", \"Rom 5\", \"Rom 6\", \"Rom 7\", \"Rom 8\"};\n        ArrayAdapter<String> romAdapter = new ArrayAdapter<String>(this,android.R.layout.simple_spinner_item, rom){\n            @Override\n            public View getView(int position, View convertView, ViewGroup parent) {\n                View view = super.getView(position, convertView, parent);\n                TextView textView = view.findViewById(android.R.id.text1);\n                textView.setTextColor(Color.BLACK);\n                return view;\n            }\n        };\n        lv.setAdapter(romAdapter);\n\n        /* AlleAsyncTask romGetJSON = new AlleAsyncTask();\n        romGetJSON.execute(\"http://student.cs.hioa.no/~s331153/romjsonout.php\");\n        alleRom = romGetJSON.getAlleRom();\n        ArrayAdapter adapter2 = new ArrayAdapter(this, R.layout.activity_husoversikt, alleRom);\n        lv.setAdapter(adapter2);*/\n\n        fab = findViewById(R.id.fab);\n        fab.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                Intent i = new Intent(HusOversikt.this, RomAdministrerer.class);\n                startActivity(i);\n            }\n        });\n\n\n       lv.setOnItemClickListener(new AdapterView.OnItemClickListener(){\n            @Override\n            public void onItemClick(AdapterView<?> adapterView, View view, int i, long j){\n                final Dialog dialog = new Dialog(HusOversikt.this);\n                dialog.setContentView(R.layout.dialog);\n                dialog.setCancelable(true);\n                dialog.show();\n\n                Button slettRom, opprettReservasjon;\n                slettRom = dialog.findViewById(R.id.btnSlett);\n                opprettReservasjon = dialog.findViewById(R.id.btnReservasjon);\n\n                slettRom.setOnClickListener(new View.OnClickListener(){\n                    @Override\n                    public void onClick(View view){\n                        //Her skal det komme inn kode for å slette rom\n                        dialog.dismiss();\n                    }\n                });\n\n                opprettReservasjon.setOnClickListener(new View.OnClickListener(){\n                    @Override\n                    public void onClick(View view){\n                        //Her må det også bli sendt med valgt hus og rom\n                        Intent intent = new Intent(HusOversikt.this, ReservasjonAdministrerer.class);\n                        startActivity(intent);\n                        dialog.dismiss();\n                    }\n                });\n            }\n        });\n    }\n\n    private class HusAsyncTask extends AsyncTask<String, Void,String> {\n        List<Hus> alleHus = new ArrayList<>();\n\n        @Override\n        protected String doInBackground(String... urls) {\n            String retur = \"\";\n            String s = \"\";\n            String output = \"\";\n            for (String url : urls) {\n\n                try {\n                    URL urlen = new URL(urls[0]);\n                    HttpURLConnection conn = (HttpURLConnection)\n                            urlen.openConnection();\n                    conn.setRequestMethod(\"GET\");\n                    conn.setRequestProperty(\"Accept\", \"application/json\");\n\n                    if (conn.getResponseCode() != 200) {\n                        throw new RuntimeException(\"Failed : HTTP error code : \" + conn.getResponseCode());\n                    }\n                    BufferedReader br = new BufferedReader(new InputStreamReader((conn.getInputStream())));\n                    System.out.println(\"Output from Server .... \\n\");\n                    while ((s = br.readLine()) != null) {\n                        output = output + s;\n                    }\n                    conn.disconnect();\n\n                    try {\n                        JSONArray mat = new JSONArray(output);\n                        for (int i = 0; i < mat.length(); i++) {\n                            JSONObject jsonobject = mat.getJSONObject(i);\n                            int husID = jsonobject.getInt(\"HusID\");\n                            String navn = jsonobject.getString(\"Navn\");\n                            String beskrivelse = jsonobject.getString(\"Beskrivelse\");\n                            String gateadresse = jsonobject.getString(\"Gateadresse\");\n                            Double latitude = jsonobject.getDouble(\"Latitude\");\n                            Double longitude = jsonobject.getDouble(\"Longitude\");\n                            int etasjer = jsonobject.getInt(\"Etasjer\");\n                            Hus etHus = new Hus(navn, beskrivelse, gateadresse, latitude, longitude, etasjer);\n                            alleHus.add(etHus);\n                        }\n                        return retur;\n                    } catch (JSONException e) {\n                        e.printStackTrace();\n                    }\n                    return retur;\n                } catch (Exception e) {\n                    return \"Noe gikk feil\";\n                }\n            }\n            return retur;\n        }\n\n        @Override\n        protected void onPostExecute(String ss) {\n            husInfo.setText(\n                    \"Hus ID: \" + alleHus.get(0).husID + \"\\n\" +\n                            \"Navn: \" + alleHus.get(0).navn + \"\\n\" +\n                            \"Beskrivelse: \" + alleHus.get(0).beskrivelse + \"\\n\" +\n                            \"Adresse: \" + alleHus.get(0).gateAdresse + \"\\n\" +\n                            \"Etasjer: \" + alleHus.get(0).etasjer);\n\n/*            Integer[] husEtasjer = new Integer[]{};\n\n            int etasjeHus = alleHus.get(0).etasjer;\n            for(int i = 1; i <= etasjeHus; i++){\n                husEtasjer = new Integer[i];\n            }*/\n\n            Integer[] husEtasjer = new Integer[alleHus.get(0).etasjer];\n            int etasjeNr = 1;\n            for(int i = 0; i < husEtasjer.length; i++){\n                husEtasjer[i] = etasjeNr;\n                etasjeNr++;\n            }\n\n            ArrayAdapter<Integer> adapter2 = new ArrayAdapter<Integer>(HusOversikt.this, android.R.layout.simple_spinner_item, husEtasjer){\n                @Override\n                public View getView(int position, View convertView, ViewGroup parent) {\n                    View view = super.getView(position, convertView, parent);\n                    TextView textView = view.findViewById(android.R.id.text1);\n                    textView.setTextColor(Color.BLACK);\n                    return view;\n                }\n            };\n            etasjer.setAdapter(adapter2);\n        }\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/s333957s331153mappe3/HusOversikt.java	(revision 02112e0c246ac4a86d49ac151b7dac04a28db9cd)
+++ app/src/main/java/com/example/s333957s331153mappe3/HusOversikt.java	(date 1605184949000)
@@ -151,18 +151,33 @@
 
                     try {
                         JSONArray mat = new JSONArray(output);
-                        for (int i = 0; i < mat.length(); i++) {
-                            JSONObject jsonobject = mat.getJSONObject(i);
-                            int husID = jsonobject.getInt("HusID");
-                            String navn = jsonobject.getString("Navn");
-                            String beskrivelse = jsonobject.getString("Beskrivelse");
-                            String gateadresse = jsonobject.getString("Gateadresse");
-                            Double latitude = jsonobject.getDouble("Latitude");
-                            Double longitude = jsonobject.getDouble("Longitude");
-                            int etasjer = jsonobject.getInt("Etasjer");
-                            Hus etHus = new Hus(navn, beskrivelse, gateadresse, latitude, longitude, etasjer);
-                            alleHus.add(etHus);
+                        if (urls[0].equals("http://student.cs.hioa.no/~s331153/husjsonout.php")) {
+                            for (int i = 0; i < mat.length(); i++) {
+                                JSONObject jsonobject = mat.getJSONObject(i);
+                                int husID = jsonobject.getInt("HusID");
+                                String navn = jsonobject.getString("Navn");
+                                String beskrivelse = jsonobject.getString("Beskrivelse");
+                                String gateadresse = jsonobject.getString("Gateadresse");
+                                Double latitude = jsonobject.getDouble("Latitude");
+                                Double longitude = jsonobject.getDouble("Longitude");
+                                int etasjer = jsonobject.getInt("Etasjer");
+                                Hus etHus = new Hus(navn, beskrivelse, gateadresse, latitude, longitude, etasjer);
+                                alleHus.add(etHus);
+                            }
                         }
+                        else if (urls[0].equals("http://student.cs.hioa.no/~s331153/romjsonout.php")) {
+                            for (int i = 0; i < mat.length(); i++) {
+                                JSONObject jsonobject = mat.getJSONObject(i);
+                                int romID = jsonobject.getInt("RomID");
+                                int husID = jsonobject.getInt("HusID");
+                                int etasjeNr = jsonobject.getInt("EtasjeNr");
+                                int romNr = jsonobject.getInt("RomNr");
+                                int kapasitet = jsonobject.getInt("Kapasitet");
+                                String beskrivelse = jsonobject.getString("Beskrivelse");
+                                Rom etRom = new Rom(romID, husID, etasjeNr, romNr, kapasitet, beskrivelse);
+                                alleRom.add(etRom);
+                            }
+                        }
                         return retur;
                     } catch (JSONException e) {
                         e.printStackTrace();
@@ -184,13 +199,6 @@
                             "Adresse: " + alleHus.get(0).gateAdresse + "\n" +
                             "Etasjer: " + alleHus.get(0).etasjer);
 
-/*            Integer[] husEtasjer = new Integer[]{};
-
-            int etasjeHus = alleHus.get(0).etasjer;
-            for(int i = 1; i <= etasjeHus; i++){
-                husEtasjer = new Integer[i];
-            }*/
-
             Integer[] husEtasjer = new Integer[alleHus.get(0).etasjer];
             int etasjeNr = 1;
             for(int i = 0; i < husEtasjer.length; i++){
@@ -208,6 +216,19 @@
                 }
             };
             etasjer.setAdapter(adapter2);
+
+           // List<Rom> rom = alleRom;
+
+            ArrayAdapter<Rom> romAdapter = new ArrayAdapter<Rom>(HusOversikt.this, android.R.layout.simple_spinner_item, alleRom){
+                @Override
+                public View getView(int position, View convertView, ViewGroup parent) {
+                    View view = super.getView(position, convertView, parent);
+                    TextView textView = view.findViewById(android.R.id.text1);
+                    textView.setTextColor(Color.BLACK);
+                    return view;
+                }
+            };
+            lv.setAdapter(romAdapter);
         }
     }
 }
Index: app/src/main/java/com/example/s333957s331153mappe3/MapsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.s333957s331153mappe3;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.core.app.ActivityCompat;\nimport android.Manifest;\nimport android.content.Intent;\nimport android.content.IntentSender;\nimport android.content.pm.PackageManager;\nimport android.location.Address;\nimport android.location.Geocoder;\nimport android.location.Location;\nimport android.os.AsyncTask;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.widget.Toast;\n\nimport com.google.android.gms.common.ConnectionResult;\nimport com.google.android.gms.common.api.GoogleApiClient;\nimport com.google.android.gms.location.LocationListener;\nimport com.google.android.gms.location.LocationRequest;\nimport com.google.android.gms.location.LocationServices;\nimport com.google.android.gms.maps.CameraUpdate;\nimport com.google.android.gms.maps.CameraUpdateFactory;\nimport com.google.android.gms.maps.GoogleMap;\nimport com.google.android.gms.maps.MapFragment;\nimport com.google.android.gms.maps.OnMapReadyCallback;\nimport com.google.android.gms.maps.model.LatLng;\nimport com.google.android.gms.maps.model.Marker;\nimport com.google.android.gms.maps.model.MarkerOptions;\n\nimport org.json.JSONArray;\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Locale;\n\npublic class MapsActivity extends AppCompatActivity implements\n        GoogleApiClient.ConnectionCallbacks,\n        GoogleApiClient.OnConnectionFailedListener, LocationListener, OnMapReadyCallback {\n\n    public static final String TAG = MapsActivity.class.getSimpleName();\n    private final static int CONNECTION_FAILURE_RESOLUTION_REQUEST = 9000;\n    private GoogleApiClient mGoogleApiClient;\n    private LocationRequest mLocationRequest;\n    private GoogleMap mMap;\n    LatLng pilestredet = new LatLng(59.923889, 10.731474);\n    LatLng nyBygning;\n    List<Hus> alleHus;\n    Geocoder geocoder;\n    List<Address> adresser;\n    private List<Marker> husMarkers = new ArrayList<>();\n\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_maps);\n\n        MapFragment mapFragment = (MapFragment) getFragmentManager()\n                .findFragmentById(R.id.map);\n        mapFragment.getMapAsync(this);\n\n        mGoogleApiClient = new GoogleApiClient.Builder(this)\n                .addConnectionCallbacks(this)\n                .addOnConnectionFailedListener(this)\n                .addApi(LocationServices.API)\n                .build();\n\n        mLocationRequest = LocationRequest.create()\n                .setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY)\n                .setInterval(10 * 1000)        // 10 seconds, in milliseconds\n                .setFastestInterval(1 * 1000); // 1 second, in milliseconds\n\n        mGoogleApiClient.connect();\n\n    }\n\n    public void handleNewLocation(Location location) {\n        CameraUpdate startPosisjon = CameraUpdateFactory.newLatLngZoom(pilestredet, 15);\n        mMap.animateCamera(startPosisjon);\n\n        /*\n        for(Hus etHus : alleHus){\n            Log.d(\"Alle hus\", etHus.navn);\n            Double latitude = etHus.getLatitude();\n            Double longitude = etHus.getLongitude();\n            LatLng latLng = new LatLng(latitude, longitude);\n            float zoomSize = 15.0f;\n            mMap.addMarker(new MarkerOptions().position(latLng).title(etHus.getNavn()));\n            mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, zoomSize));\n        }*/\n    }\n\n\n    @Override\n    public void onConnected(Bundle bundle) {\n        Log.i(TAG, \"Location services connected.\");\n\n        if (checkSelfPermission(Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED\n                && checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.ACCESS_FINE_LOCATION,Manifest.permission.ACCESS_COARSE_LOCATION}, 0);\n        }\n        if (checkSelfPermission(Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED\n                && checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED){\n            return;\n        }\n\n        Location location = LocationServices.FusedLocationApi.getLastLocation(mGoogleApiClient);\n\n        if (location == null) {\n            LocationServices.FusedLocationApi.requestLocationUpdates(mGoogleApiClient, mLocationRequest, this);\n            handleNewLocation(location);\n\n        } else {\n            handleNewLocation(location);\n        }\n    }\n\n    @Override\n    public void onConnectionSuspended(int i) {\n        Log.i(TAG, \"Location services suspended. Please reconnect.\");\n    }\n\n    @Override\n    public void onConnectionFailed(ConnectionResult connectionResult) {\n        if (connectionResult.hasResolution()) {\n            try {\n                // Start an Activity that tries to resolve the error\n                connectionResult.startResolutionForResult(this, CONNECTION_FAILURE_RESOLUTION_REQUEST);\n            } catch (IntentSender.SendIntentException e) {\n                e.printStackTrace();\n            }\n        } else {\n            Log.i(TAG, \"Location services connection failed with code \" + connectionResult.getErrorCode());\n        }\n    }\n\n    @Override\n    protected void onResume() {\n        super.onResume();\n        //setUpMapIfNeeded();\n        mGoogleApiClient.connect();\n    }\n\n    @Override\n    protected void onPause() {\n        super.onPause();\n        if (mGoogleApiClient.isConnected()) {\n            LocationServices.FusedLocationApi.removeLocationUpdates(mGoogleApiClient, this);\n            mGoogleApiClient.disconnect();\n        }\n    }\n\n    @Override\n    public void onLocationChanged(Location location) {\n        handleNewLocation(location);\n    }\n\n    @Override\n    public void onMapReady(GoogleMap googleMap) {\n        mMap = googleMap;\n\n        HentHusAsyncTask task = new HentHusAsyncTask();\n        task.execute(\"http://student.cs.hioa.no/~s331153/husjsonout.php\");\n\n        mMap.setOnMapClickListener(new GoogleMap.OnMapClickListener() {\n\n            @Override\n            public void onMapClick(LatLng latLng) {\n                MarkerOptions markerOptions = new MarkerOptions();\n                markerOptions.position(latLng);\n\n                nyBygning = new LatLng(latLng.latitude, latLng.longitude);\n                geocoder = new Geocoder(MapsActivity.this, Locale.getDefault());\n                try {\n                    adresser = geocoder.getFromLocation(nyBygning.latitude, nyBygning.longitude, 1);\n                } catch (IOException e) {\n                    Toast.makeText(MapsActivity.this, \"Ikke gyldig adresse funnet\", Toast.LENGTH_SHORT).show();\n                    Log.d(\"TAG\", \"Fant ikke adresse til koordinater\");\n\n                }\n                if(adresser == null){\n                    Toast.makeText(MapsActivity.this, \"Ikke gyldig adresse funnet\", Toast.LENGTH_LONG);\n                    Log.d(\"TAG\", \"Fant ikke adresse til koordinater\");\n                }\n                else {\n                    markerOptions.title(\"Ny bygning?\");\n                    mMap.animateCamera(CameraUpdateFactory.newLatLng(latLng));\n                    mMap.addMarker(markerOptions);\n                }\n\n            }\n        });\n\n\n        mMap.setOnMarkerClickListener(new GoogleMap.OnMarkerClickListener() {\n            @Override\n            public boolean onMarkerClick(Marker marker) {\n                String markerTittel = marker.getTitle();\n                if(markerTittel.equals(\"Ny bygning?\")) {\n                    Intent i = new Intent(MapsActivity.this, HusAdministrerer.class);\n                    i.putExtra(\"koordinater\", nyBygning);\n                    startActivity(i);\n                    return false;\n                }\n                else {\n\n                    return false;\n                }\n            }\n        });\n    }\n\n    private class HentHusAsyncTask extends AsyncTask<String, Void,String> {\n        JSONObject jsonObject;\n\n        @Override\n        protected String doInBackground(String... urls) {\n            String retur = \"\";\n            String s = \"\";\n            String output = \"\";\n            for (String url : urls) {\n\n                try {\n                    URL urlen = new URL(urls[0]);\n                    HttpURLConnection conn = (HttpURLConnection)\n                            urlen.openConnection(); conn.setRequestMethod(\"GET\");\n                    conn.setRequestProperty(\"Accept\", \"application/json\");\n\n                    if (conn.getResponseCode() != 200) {\n                        throw new RuntimeException(\"Failed : HTTP error code : \"+ conn.getResponseCode());\n                    }\n                    BufferedReader br = new BufferedReader(new InputStreamReader((conn.getInputStream())));\n                    System.out.println(\"Output from Server .... \\n\");\n                    while ((s = br.readLine()) != null) {\n                        output = output + s;\n                    }\n                    conn.disconnect();\n\n                    try {\n                        JSONArray mat = new JSONArray(output);\n                        for (int i = 0; i < mat.length(); i++) {\n                            JSONObject jsonobject = mat.getJSONObject(i);\n                            int husID = jsonobject.getInt(\"HusID\");\n                            String navn = jsonobject.getString(\"Navn\");\n                            String beskrivelse = jsonobject.getString(\"Beskrivelse\");\n                            String gateadresse = jsonobject.getString(\"Gateadresse\");\n                            Double latitude = jsonobject.getDouble(\"Latitude\");\n                            Double longitude = jsonobject.getDouble(\"Longitude\");\n                            int etasjer = jsonobject.getInt(\"Etasjer\");\n                            Hus etHus = new Hus(navn, beskrivelse, gateadresse, latitude, longitude, etasjer);\n                            alleHus.add(etHus);\n                        }\n                        return retur;\n                    } catch (JSONException e) {\n                        e.printStackTrace(); }\n                    return retur;\n                } catch (Exception e) {\n                    return \"Noe gikk feil\"; }\n            }\n            return retur;\n        }\n        @Override\n        protected void onPostExecute(String ss) {\n            //Toast.makeText(MapsActivity.this, alleHus.get(0).beskrivelse, Toast.LENGTH_LONG );\n            for (int i = 0 ; i < alleHus.size(); i++ ){\n                Hus etHus = alleHus.get(i);\n                LatLng pos = new LatLng(etHus.latitude,etHus.longitude);\n                Marker m = mMap.addMarker(new MarkerOptions().position(pos).title(etHus.navn));\n                husMarkers.add(m);\n            }\n\n        }\n\n\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/s333957s331153mappe3/MapsActivity.java	(revision 02112e0c246ac4a86d49ac151b7dac04a28db9cd)
+++ app/src/main/java/com/example/s333957s331153mappe3/MapsActivity.java	(date 1605184153000)
@@ -204,7 +204,7 @@
             public boolean onMarkerClick(Marker marker) {
                 String markerTittel = marker.getTitle();
                 if(markerTittel.equals("Ny bygning?")) {
-                    Intent i = new Intent(MapsActivity.this, HusAdministrerer.class);
+                    Intent i = new Intent(MapsActivity.this, HusOversikt.class);
                     i.putExtra("koordinater", nyBygning);
                     startActivity(i);
                     return false;
@@ -269,13 +269,13 @@
         @Override
         protected void onPostExecute(String ss) {
             //Toast.makeText(MapsActivity.this, alleHus.get(0).beskrivelse, Toast.LENGTH_LONG );
-            for (int i = 0 ; i < alleHus.size(); i++ ){
+/*            for (int i = 0 ; i < alleHus.size(); i++ ){
                 Hus etHus = alleHus.get(i);
                 LatLng pos = new LatLng(etHus.latitude,etHus.longitude);
                 Marker m = mMap.addMarker(new MarkerOptions().position(pos).title(etHus.navn));
                 husMarkers.add(m);
             }
-
+*/
         }
 
 
Index: app/src/main/java/com/example/s333957s331153mappe3/Hus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.s333957s331153mappe3;\n\npublic class Hus {\n    public int husID;\n    public String navn;\n    public String beskrivelse;\n    public String gateAdresse;\n    public Double latitude;\n    public Double longitude;\n    public int etasjer;\n\n    public Hus(String navn, String beskrivelse, String gateAdresse, Double latitude, Double longitude, int etasjer){\n        this.navn = navn;\n        this.beskrivelse = beskrivelse;\n        this.gateAdresse = gateAdresse;\n        this.etasjer = etasjer;\n        this.latitude = latitude;\n        this.longitude = longitude;\n\n    }\n\n    public int getHusID(){\n        return husID;\n    }\n\n    public String getNavn(){\n        return navn;\n    }\n\n    public String getBeskrivelse(){\n        return beskrivelse;\n    }\n\n    public String getGateAdresse(){\n        return gateAdresse;\n    }\n\n    public Double getLatitude(){\n        return latitude;\n    }\n\n    public Double getLongitude(){\n        return longitude;\n    }\n\n    public int getEtasjer(){\n        return etasjer;\n    }\n\n    public void setHusID(int husID) {\n        this.husID = husID;\n    }\n\n    public void setNavn(String navn) {\n        this.navn = navn;\n    }\n\n    public void setBeskrivelse(String beskrivelse) {\n        this.beskrivelse = beskrivelse;\n    }\n\n    public void setGateAdresse(String gateAdresse) {\n        this.gateAdresse = gateAdresse;\n    }\n\n    public void setLatitude(Double latitude) {\n        this.latitude = latitude;\n    }\n\n    public void setLongitude(Double latitude) {\n        this.longitude = longitude;\n    }\n\n    public void setEtasjer(int etasjer) {\n        this.etasjer = etasjer;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/s333957s331153mappe3/Hus.java	(revision 02112e0c246ac4a86d49ac151b7dac04a28db9cd)
+++ app/src/main/java/com/example/s333957s331153mappe3/Hus.java	(date 1605184390000)
@@ -9,6 +9,17 @@
     public Double longitude;
     public int etasjer;
 
+    public Hus(int husID, String navn, String beskrivelse, String gateAdresse, Double latitude, Double longitude, int etasjer){
+        this.husID = husID;
+        this.navn = navn;
+        this.beskrivelse = beskrivelse;
+        this.gateAdresse = gateAdresse;
+        this.etasjer = etasjer;
+        this.latitude = latitude;
+        this.longitude = longitude;
+
+    }
+
     public Hus(String navn, String beskrivelse, String gateAdresse, Double latitude, Double longitude, int etasjer){
         this.navn = navn;
         this.beskrivelse = beskrivelse;
